Airline Flight Information
----------------------------------
1. create database airline_info;
	
	CREATE DATABASE

2. airline_info=# create table flights(
	flno int primary key not null,
	ffrom char(50),
	tto char(50),
	distance bigint,
	departs time,
	arrives time,
	price bigint
	);

	                       Table "public.flights"
	  Column  |          Type          | Collation | Nullable | Default 
	----------+------------------------+-----------+----------+---------
	 flno     | integer                |           | not null | 
	 ffrom    | character(50)          |           |          | 
	 tto      | character(50)          |           |          | 
	 distance | bigint                 |           |          | 
	 departs  | time without time zone |           |          | 
	 arrives  | time without time zone |           |          | 
	 price    | bigint                 |           |          | 
	Indexes:
	    "flights_pkey" PRIMARY KEY, btree (flno)


	
3.	create table aircraft(
	aid int primary key not null,
	aname text,
	range bigint
	);

	     	Table "public.aircraft"
	 Column |  Type   | Collation | Nullable | Default 
	--------+---------+-----------+----------+---------
	 aid    | integer |           | not null | 
	 aname  | text    |           |          | 
	 range  | bigint  |           |          | 
	Indexes:
	    "aircraft_pkey" PRIMARY KEY, btree (aid)
	Referenced by:
	    TABLE "certified" CONSTRAINT "certified_aid_fkey" FOREIGN KEY (aid) REFERENCES aircraft(aid)


4.  create table employees(
	eid int primary key not null,
	ename text,
	salary real check(salary>0)
	);

	          	  Table "public.employees"
	 Column |  Type   | Collation | Nullable | Default 
	--------+---------+-----------+----------+---------
	 eid    | integer |           | not null | 
	 ename  | text    |           |          | 
	 salary | real    |           |          | 
	Indexes:
	    "employees_pkey" PRIMARY KEY, btree (eid)
	Check constraints:
	    "employees_salary_check" CHECK (salary > 0::double precision)
	Referenced by:
	    TABLE "certified" CONSTRAINT "certified_eid_fkey" FOREIGN KEY (eid) REFERENCES employees(eid)



5.	create table certified(
	eid int references employees(eid),
	aid int references aircraft(aid)
	);

	             Table "public.certified"
	 Column |  Type   | Collation | Nullable | Default 
	--------+---------+-----------+----------+---------
	 eid    | integer |           |          | 
	 aid    | integer |           |          | 
	Foreign-key constraints:
	    "certified_aid_fkey" FOREIGN KEY (aid) REFERENCES aircraft(aid)
	    "certified_eid_fkey" FOREIGN KEY (eid) REFERENCES employees(eid)

6.  insert into flights(flno,ffrom,tto,distance,departs,arrives,price)values(1,'Los 
	angeles','Honolulu',2558,'9:00AM','1:15PM',32432);

	 flno |                       ffrom                        |                        tto                         | distance | departs  | arrives  | price  
	------+----------------------------------------------------+----------------------------------------------------+----------+----------+----------+--------
	    1 | Los angeles                                        | Honolulu                                           |     2558 | 09:00:00 | 13:15:00 |  32432
	    2 | Los angeles                                        | Chicago                                            |     3890 | 00:00:00 | 09:15:00 | 132432
	    3 | Madison                                            | New York                                           |    38090 | 06:00:00 | 21:15:00 | 189002
	    4 | New York                                           | Los angeles                                        |     2709 | 15:00:00 | 04:15:00 | 202002
	    5 | Los angeles                                        | Honolulu                                           |     2558 | 09:00:00 | 13:15:00 |  30202
	(5 rows)

7.	insert into aircraft(aid,aname,range)values(2,'Boeing 400',3500);

	 aid |    aname     | range 
	-----+--------------+-------
	   1 | Boeing 300   |  1500
	   2 | Boeing 400   |  3500
	   3 | Boeing 747-8 |  1800
	   4 | Airbus 300   |   800
	   5 | Airbus 500   |  1200
	   6 | Airbus 900   |  3200
	(6 rows)

8.	insert into employees(eid,ename,salary)values(1,'Mehak',100000);

	 eid |  ename  | salary 
	-----+---------+--------
	   1 | Mehak   | 100000
	   2 | Akshay  |  80000
	   3 | Karan   | 180000
	   4 | Shubham | 100000
	   5 | Riya    | 150000
	   6 | Richa   |  70000
	(6 rows)	

9.	insert into certified(eid,aid)values(1,1);

	 eid | aid 
	-----+-----
	   1 |   1
	   1 |   6
	   1 |   5
	   1 |   4
	   3 |   4
	   5 |   2
	   5 |   5
	   5 |   1
	   6 |   1
	(9 rows)

10.	Find the names of aircraft such that all pilots certified to operate them earnmore than $80,000.

	 select aname from aircraft where aid in(select aid from certified where eid in(select eid from employees where salary in(select salary from employees where salary>80000)));
	   aname    
	------------
	 Boeing 300
	 Boeing 400
	 Airbus 300
	 Airbus 500
	 Airbus 900
	(5 rows)

11.	Print the name and salary of every nonpilot whose salary is more than theaverage salary for pilots.

	 select ename,salary from employees where eid not in(select distinct eid from certified) AND salary >(select avg(salary)from employees where eid in(select distinct eid from certified));
	 
	 ename  | salary 
	--------+--------
	 Gunjan | 300000
	(1 row)

13. Compute the difference between the average salary of a pilot and the averagesalary of all employees (including pilots).

	select(select avg(salary) from employees where eid in(select distinct eid from certified))- (select avg(salary) from employees)as Difference;
	 
	 difference 
	------------
	     -15000

14. Print the names of employees who are certified only on aircrafts with cruisingrange longer than 1000 miles.

	select eid,ename from employees where eid in(select eid from certified where aid in (select aid from aircraft where range>1000));
	
	 eid | ename 
	-----+-------
	   1 | Mehak
	   5 | Riya
	   6 | Richa
	(3 rows)

